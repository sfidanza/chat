# Build all and push to container repository
name: build-and-push
on: [push]

env:
  FRONTEND_IMAGE: ghcr.io/${{ github.repository_owner }}/chat-frontend
  BACKEND_IMAGE: ghcr.io/${{ github.repository_owner }}/chat-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Set version
        id: version
        run: |
          echo "BRANCH=${{ github.ref }}"
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo VERSION=$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: ðŸŽ‰ Build and push frontend image
        run: |
          docker build ./client/ -t $FRONTEND_IMAGE:${{ steps.version.outputs.VERSION }}
          docker push $FRONTEND_IMAGE:${{ steps.version.outputs.VERSION }}

      - name: ðŸŽ‰ Build and push backend image
        run: |
          docker build ./server/ -t $BACKEND_IMAGE:${{ steps.version.outputs.VERSION }}
          docker push $BACKEND_IMAGE:${{ steps.version.outputs.VERSION }}
